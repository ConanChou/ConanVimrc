*eio_sendfile* -- Transfer data between file descriptors

  resource eio_sendfile(mixed out_fd, mixed in_fd, int offset, int length [, int pri [, callable callback [, string data]]])~

|eio_sendfile| copies data between one file descriptor and another. See
SENDFILE(2) man page for details.

Output stream, Socket resource, or file descriptor. Should be opened for
writing.

Input stream, Socket resource, or file descriptor. Should be opened for
reading.

Offset within the source file.

Number of bytes to copy.

The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or &null;. If
&null; passed, {pri} internally is set to EIO_PRI_DEFAULT.

{callback} function is called when the request is done. It should match the
following prototype:

  void callback(mixed $data, int $result[, resource $req]);

{data} is custom data passed to the request.

{result} request-specific result value; basically, the value returned by
corresponding system call.

{req} is optional request resource which can be used with functions like
|eio_get_last_error|

Arbitrary variable passed to {callback}.

|eio_sendfile| returns request resource on success or &false; on error.

vim:ft=help:
