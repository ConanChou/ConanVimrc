*eio_fallocate* -- Allows the caller to directly manipulate the allocated disk
space for a file

  resource eio_fallocate(mixed fd, int mode, int offset, int length [, int pri [, callable callback [, mixed data]]])~

|eio_fallocate| allows the caller to directly manipulate the allocated disk
space for the file specified by {fd} file descriptor for the byte range
starting at {offset} and continuing for {length} bytes.

EIO_O_CREAT should be logically OR'd with EIO_O_WRONLY, or EIO_O_RDWR

Stream, Socket resource, or numeric file descriptor, e.g. returned by
|eio_open|.

Currently only one flag is supported for mode: EIO_FALLOC_FL_KEEP_SIZE (the
same as POSIX constant FALLOC_FL_KEEP_SIZE).

Specifies start of the byte range.

Specifies length the byte range.

The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or &null;. If
&null; passed, {pri} internally is set to EIO_PRI_DEFAULT.

{callback} function is called when the request is done. It should match the
following prototype:

  void callback(mixed $data, int $result[, resource $req]);

{data} is custom data passed to the request.

{result} request-specific result value; basically, the value returned by
corresponding system call.

{req} is optional request resource which can be used with functions like
|eio_get_last_error|

Arbitrary variable passed to {callback}.

|eio_fallocate| returns request resource on success or &false; on error.

vim:ft=help:
