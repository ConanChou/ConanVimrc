*strripos* -- Find the position of the last occurrence of a case-insensitive
substring in a string

  int strripos(string haystack, string needle [, int offset])~

Find the numeric position of the last occurrence of {needle} in the {haystack}
string.

Unlike the |strrpos|, |strripos| is case-insensitive.

{haystack} The string to search in.

{needle} If {needle} is not a string, it is converted to an integer and
applied as the ordinal value of a character.

{offset} If specified, search will start this number of characters counted
from the beginning of the string. If the value is negative, search will
instead start from that many characters from the end of the string, searching
backwards.

Returns the position where the needle exists relative to the beginnning of the
{haystack} string (independent of search direction or offset). Also note that
string positions start at 0, and not 1.

Returns &false; if the needle was not found.

This function may return Boolean &false;, but may also return a non-Boolean
value which evaluates to &false;. Please read the section on Booleans for more
information. Use the === operator for testing the return value of this
function.

A simple |strripos| example

<?php >
  $haystack = 'ababcd';
  $needle   = 'aB';
  
  $pos      = strripos($haystack, $needle);
  
  if ($pos === false) {
      echo "Sorry, we did not find ($needle) in ($haystack)";
  } else {
      echo "Congratulations!\n";
      echo "We found the last ($needle) in ($haystack) at position ($pos)";
  }
?>

The above example will output:

  Congratulations!
     We found the last (aB) in (ababcd) at position (2)



|strpos| |stripos| |strrpos| |strrchr| |stristr| |substr|

vim:ft=help:
