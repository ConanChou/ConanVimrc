*eio_write* -- Write to file

  resource eio_write(mixed fd, string str [, int length [, int offset [, int pri [, callable callback [, mixed data]]]]])~

|eio_write| writes up to {length} bytes from {str} at {offset} offset from the
beginning of the file.

Stream, Socket resource, or numeric file descriptor, e.g. returned by
|eio_open|

Source string

Maximum number of bytes to write.

Offset from the beginning of file.

The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or &null;. If
&null; passed, {pri} internally is set to EIO_PRI_DEFAULT.

{callback} function is called when the request is done. It should match the
following prototype:

  void callback(mixed $data, int $result[, resource $req]);

{data} is custom data passed to the request.

{result} request-specific result value; basically, the value returned by
corresponding system call.

{req} is optional request resource which can be used with functions like
|eio_get_last_error|

Arbitrary variable passed to {callback}.

|eio_write| returns request resource on success or &false; on error.

vim:ft=help:
