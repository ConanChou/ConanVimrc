*cubrid_lob2_write* -- Write to a lob object.

  bool cubrid_lob2_write(resource lob_identifier, string buf)~

The |cubrid_lob2_write| function reads as much as data from {buf} and stores
it to the LOB object. Note that this function can only append characters now.

{lob_identifier} Lob identifier as a result of |cubrid_lob2_new| or get from
the result set.

{buf} Data that need to be written to the lob object.

&true; if the process is successful and &false; for failure.

|cubrid_lob2_write| example 1

<?php >
  // test_lob (id INT, contents CLOB)
  
  $conn = cubrid_connect("localhost", 33000, "demodb", "public", "");
  
  $req = cubrid_prepare($conn, "INSERT INTO test_lob (2, ?)");
  
  $lob = cubrid_lob2_new($conn, 'CLOB');
  $len = cubrid_lob2_write($lob, "Hello world");
  
  cubrid_lob2_bind($req, 1, $lob);
  cubrid_execute($req);
  
  cubrid_disconnect($conn);
?>



|cubrid_lob2_write| example 2

<?php >
  // test_lob (id INT, contents CLOB)
  
  $conn = cubrid_connect("localhost", 33000, "demodb", "public", "");
  
  $req = cubrid_execute($conn, "select * from test_lob");
  
  $row = cubrid_fetch_row($req, CUBRID_LOB);
  $lob = $row[1];
  cubrid_lob2_seek($lob, 0, CUBRID_CURSOR_LAST);
  
  $pos = cubrid_lob2_tell($lob);
  print "pos before write: $pos\n";
  
  cubrid_lob2_write($lob, "Hello world");
  
  $pos = cubrid_lob2_tell($lob);
  print "pos after write: $pos\n";
  
  cubrid_disconnect($conn);
?>



|cubrid_lob2_read| |cubrid_lob2_seek| |cubrid_lob2_seek64| |cubrid_lob2_tell|
|cubrid_lob2_tell64| |cubrid_lob2_size| |cubrid_lob2_size64|

vim:ft=help:
