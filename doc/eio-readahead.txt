*eio_readahead* -- Perform file readahead into page cache

  resource eio_readahead(mixed fd, int offset, int length [, int pri [, callable callback [, mixed data]]])~

|eio_readahead| populates the page cache with data from a file so that
subsequent reads from that file will not block on disk I/O. See READAHEAD(2)
man page for details.

Stream, Socket resource, or numeric file descriptor

Starting point from which data is to be read.

Number of bytes to be read.

The request priority: EIO_PRI_DEFAULT, EIO_PRI_MIN, EIO_PRI_MAX, or &null;. If
&null; passed, {pri} internally is set to EIO_PRI_DEFAULT.

{callback} function is called when the request is done. It should match the
following prototype:

  void callback(mixed $data, int $result[, resource $req]);

{data} is custom data passed to the request.

{result} request-specific result value; basically, the value returned by
corresponding system call.

{req} is optional request resource which can be used with functions like
|eio_get_last_error|

Arbitrary variable passed to {callback}.

|eio_readahead| returns request resource on success or &false; on error.

vim:ft=help:
