*ip2long* -- Converts a string containing an (IPv4) Internet Protocol dotted
address into a proper address

  int ip2long(string ip_address)~

The function |ip2long| generates an IPv4 Internet network address from its
Internet standard format (dotted string) representation.

|ip2long| will also work with non-complete IP addresses. Read
&url.ip2long.tech; for more info.

{ip_address} A standard format address.

Returns the IPv4 address or &false; if {ip_address} is invalid.

Version Description 5.2.10 Prior to this version, |ip2long| would sometimes
return a valid number even if passed an value which was not an (IPv4) Internet
Protocol dotted address. 5.0.0 Prior to this version, |ip2long| returned -1 on
failure.

|ip2long| Example

<?php >
  $ip = gethostbyname('www.example.com');
  $out = "The following URLs are equivalent:<br />\n";
  $out .= 'http://www.example.com/, http://' . $ip . '/, and http://' . sprintf("%u", ip2long($ip)) . "/<br />\n";
  echo $out;
?>





Displaying an IP address This second example shows how to print a converted
address with the |printf| function in both PHP 4 and PHP 5:

<?php >
  $ip   = gethostbyname('www.example.com');
  $long = ip2long($ip);
  
  if ($long == -1 || $long === FALSE) {
      echo 'Invalid IP, please try again';
  } else {
      echo $ip   . "\n";           // 192.0.34.166
      echo $long . "\n";           // -1073732954
      printf("%u\n", ip2long($ip)); // 3221234342
  }
?>



Because PHP's integer type is signed, and many IP addresses will result in
negative integers on 32-bit architectures, you need to use the "%u" formatter
of |sprintf| or |printf| to get the string representation of the unsigned IP
address.

vim:ft=help:
